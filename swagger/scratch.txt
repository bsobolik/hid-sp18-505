'default': {
         'ENGINE': 'django.contrib.gis.db.backends.postgis',
         'NAME': os.environ['POSTGRES_DB'],
         'USER': os.environ['POSTGRES_USER'],
         'PASSWORD': os.environ['POSTGRES_PASSWORD'],
         'HOST': '127.0.0.1'
},

Cerberus==0.9.2
click==6.7
Eve==0.7.6
Events==0.2.2
Flask==0.12
Flask-PyMongo==0.5.1
itsdangerous==0.24
Jinja2==2.10
MarkupSafe==0.23
psutil==5.4.3
pymongo==3.6.0
simplejson==3.13.2
Werkzeug==0.11.15
    
    # - swagger_mongo_db
    # swagger_mongo_db:
    #   env_file: ./.env
    #   build:
    #     context: .
    #     dockerfile: Dockerfile.mongodb
    #   image: swagger_mongo_db
    #   ports:
    #     - 27017:27017
    #   volumes:
    #     - ./mongodb/data/db:/data/db


version: '3'

services:
  swagger_mongodb:
    env_file: ./.env
    build:
      context: .
      dockerfile: Dockerfile.mongodb
    image: swagger_mongodb
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/data/db:/data/db
  app:
    env_file: ./.env
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    depends_on: 
      - swagger_mongodb
    ports:
      - 5000:5000
      - 8000:8000
      - 8080:8080
    volumes:
      - ./..:/opt/app
    command: /bin/bash
    stdin_open: true
    tty: true
    links:
      - swagger_mongodb


@app.route('/api/v1/performance/<string:attribute>', methods=['GET'])
def performance(attribute):
    """ A little smater routing system.
    """

    data = None

    if attribute == 'system':
        data = { 'system': platform.system() }
    elif attribute == 'processor':
        data = { 'processor': platform.processor() }
    elif attribute in ['cpu_count', 'cpucount'] :
        data = { 'cpu_count': psutil.cpu_count() }
    elif attribute == 'machine':
        data = { 'machine': platform.machine() }
    elif attribute in ['virtual_mem', 'virtualmem']:
        data = { 'virtual_mem': psutil.virtual_memory().total }
    elif attribute in ['virtual_mem_gb', 'virtualmemgb']:
        data = { 'virtual_mem_gb': psutil.virtual_memory().total / (1024.0 ** 3) }
    elif attribute == 'all':
        data = {
            'system': platform.system(),
            'processor': platform.processor(),
            'cpu_count': psutil.cpu_count(),
            'machine': platform.machine(),
            'virtual_mem': psutil.virtual_memory().total,
            'virtual_mem_gb': psutil.virtual_memory().total / (1024.0 ** 3),
        }

    packet = json.dumps(data)
    resp = Response(packet, status=200, mimetype='application/json')

    return(resp)
